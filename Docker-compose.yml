version: '3.4'

volumes:
  pg_project:

services:
  reactpro:
    image: reactpro
    ports:
      - "8082:8080"
    build:
      context: .
    container_name: reactpro
    depends_on:
      - pg_db_react
    environment:
      - spring_r2dbc_url=r2dbc:postgresql://localhost:5432/postgres
      - spring_r2dbc_username=postgres
      - spring_r2dbc_password=1111
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:29092

  pg_db_react:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=1111
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pg_project:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5435}:5432

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
      image: confluentinc/cp-kafka:7.3.0
      restart: always
      container_name: broker
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
